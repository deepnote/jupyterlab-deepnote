name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@affc83be6020d529b9368cd4d63e467877606600 # v1

      - name: Install dependencies
        run: python -m pip install -U "jupyterlab>=4.0.0,<5"

      - name: Lint the extension
        run: |
          set -eux
          jlpm
          jlpm run lint:check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test the extension
        run: |
          set -eux
          jlpm run test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the extension
        run: |
          set -eux
          python -m pip install .[test]

          mkdir -p coverage
          pytest -vv -r ap --cov jupyterlab_deepnote --cov-report=xml --junit-xml=coverage/pytest-results.xml
          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "jupyterlab_deepnote.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupyterlab-deepnote.*OK"
          python -m jupyterlab.browser_check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml,coverage/lcov.info
          fail_ci_if_error: true

      - name: Upload test results to Codecov
        if: '!cancelled()'
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/pytest-results.xml,coverage/junit.xml
          fail_ci_if_error: true

      - name: Package the extension
        run: |
          set -eux

          pip install build
          python -m build
          pip uninstall -y "jupyterlab_deepnote" jupyterlab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload extension packages
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: extension-artifacts
          path: dist/jupyterlab_deepnote*
          if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: '3.9'
          architecture: 'x64'
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: extension-artifacts
      - name: Install and Test
        run: |
          set -eux
          # Remove NodeJS, twice to take care of system and locally installed node versions.
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)

          pip install "jupyterlab>=4.0.0,<5" jupyterlab_deepnote*.whl


          jupyter server extension list
          jupyter server extension list 2>&1 | grep -ie "jupyterlab_deepnote.*OK"

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupyterlab-deepnote.*OK"
          python -m jupyterlab.browser_check --no-browser-test

  #  integration-tests:
  #    name: Integration tests
  #    needs: build
  #    runs-on: ubuntu-latest
  #
  #    env:
  #      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers
  #
  #    steps:
  #    - name: Checkout
  #      uses: actions/checkout@v4
  #
  #    - name: Base Setup
  #      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
  #
  #    - name: Download extension package
  #      uses: actions/download-artifact@v4
  #      with:
  #        name: extension-artifacts
  #
  #    - name: Install the extension
  #      run: |
  #        set -eux
  #        python -m pip install "jupyterlab>=4.0.0,<5" jupyterlab_deepnote*.whl
  #
  #    - name: Install dependencies
  #      working-directory: ui-tests
  #      env:
  #        YARN_ENABLE_IMMUTABLE_INSTALLS: 0
  #        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  #      run: jlpm install
  #
  #    - name: Set up browser cache
  #      uses: actions/cache@v4
  #      with:
  #        path: |
  #          ${{ github.workspace }}/pw-browsers
  #        key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}
  #
  #    - name: Install browser
  #      run: |
  #        set -eux
  #        jlpm playwright install-deps
  #        jlpm playwright install chromium
  #      working-directory: ui-tests
  #
  #    - name: Execute integration tests
  #      working-directory: ui-tests
  #      run: |
  #        jlpm playwright test
  #
  #    - name: Upload Playwright Test report
  #      if: always()
  #      uses: actions/upload-artifact@v4
  #      with:
  #        name: jupyterlab_deepnote-playwright-tests
  #        path: |
  #          ui-tests/test-results
  #          ui-tests/playwright-report

  check_links:
    name: Check Links
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@affc83be6020d529b9368cd4d63e467877606600 # v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@affc83be6020d529b9368cd4d63e467877606600 # v1
        with:
          ignore_links: 'https://github.com/deepnote/jupyterlab-deepnote/pull/ https://github.com/deepnote/jupyterlab-deepnote/issues/ https://github.com/deepnote/jupyterlab-deepnote/actions/workflows/ci.yml https://github.com/deepnote/jupyterlab-deepnote/actions/workflows/ci.yml/badge.svg https://www.youtube.com/watch?v=jF0yA-JLQW0'
